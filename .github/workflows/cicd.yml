name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push api
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./my-ts-app
          push: true
          tags: ghcr.io/${{ github.repository }}-api:${{ github.ref_name }}
          file: ./my-ts-app/Dockerfile.prod

      - name: Build and push app
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./my-app
          push: true
          tags: ghcr.io/${{ github.repository }}-app:${{ github.ref_name }}
          file: ./my-ts-app/Dockerfile.prod

  test:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Change to API directory
        run: cd my-ts-app
      - name: Run Tests
        run: |
          cd my-ts-app
          npm install 
          npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }} "\
          cd fullnextapp && \
          git pull && \
          sudo docker compose -f docker-compose.prod.vps up -d --pull always"
