version: '3'

services:
  my-app:
    container_name: my-app
    build:
      context: ./my-app
      dockerfile: Dockerfile.dev

    # Set environment variables directly in the docker-compose file
    environment:
      ENV_VARIABLE: ${ENV_VARIABLE}
      NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

    # Set envrionment variables based on the .env file
    env_file:
      - .env
    volumes:
      - ./my-app/src:/app/src
      - ./my-app/public:/app/public
    restart: always
    ports:
      - 3000:3000
    networks:
      - my_network
    depends_on:
      - my-api

  # Add more containers below (nginx, postgres, etc.)
  my-api:
      container_name: my-api
      build:
        context: ./my-ts-app
        dockerfile: Dockerfile.dev

      # Set envrionment variables based on the .env file
      env_file:
        - .env
      restart: always
      ports:
        - 5000:5000
      networks:
        - my_network
      depends_on:
        - mongo

  my-api-test:
      container_name: my-api-test
      build:
        context: ./my-ts-app
        dockerfile: Dockerfile.test

      # Set envrionment variables based on the .env file
      env_file:
        - .env
      ports:
        - 5050:5050
      networks:
        - my_network
      depends_on:
        - mongo

  mongo:
    container_name: mongo
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=userAdmin
      - MONGO_INITDB_ROOT_PASSWORD=userPassword
    restart: always
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    networks:
      - my_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network:
    external: true